
version: 2.1

commands:
  install-ansible:
    description: Installs Ansible
    steps:
      - run:
          name: Install Ansible
          command: |
            sudo apt update
            sudo apt install software-properties-common
            sudo add-apt-repository --yes --update ppa:ansible/ansible
            sudo apt install ansible -y

  install-utility:
    description: install utility to work with workspace
    steps:
      - run:
            name: Install tar utility
            command: |
              yum install -y tar gzip

  destroy_environment:
    steps:
      - run:
            name: Destroy environment
            # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
            # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
            when: on_fail
            command: |
              aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli:latest
    steps:
      - checkout
      - install-utility
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      # - run:
      #     name: get public ip of created instaces
      #     command: 
      #       touch inventory.txt &
      #       echo [all] > inventory.txt &
      #       pwd &
      #       aws ec2 describe-instances --filters "Name=tag:Project,Values=udacity" --query "Reservations[*].Instances[*].PublicIpAddress" --output text >> inventory.txt &
      #       cat inventory.txt 
      # - persist_to_workspace:
      #     root: ~/
      #     paths:
      #       - project/inventory.txt


  configure_infrastructure: 
    docker:
      - image: cimg/python:3.10.5
    steps:
      - checkout
      - add_ssh_keys:
              fingerprints: ["27:b4:3c:a3:91:97:9a:04:5c:58:16:4b:a0:aa:1a:70"]
      - attach_workspace:
          at: ~/
      - install-ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            pwd &
            ls &
            cat inventory &
            ansible-playbook -i inventory main.yml

  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          # Fail the job intentionally to simulate an error
          command:  return 1
      - destroy_environment

workflows:
  my_workflow:
      jobs:
        - create_infrastructure
        #- configure_infrastructure
        - smoke_test:
            requires: [create_infrastructure]
